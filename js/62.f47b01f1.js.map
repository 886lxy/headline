{"version":3,"file":"js/62.f47b01f1.js","mappings":"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","sources":["webpack://toutiao-a/./src/views/my/chatView.vue","webpack://toutiao-a/./node_modules/engine.io-parser/build/esm/commons.js","webpack://toutiao-a/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://toutiao-a/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://toutiao-a/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://toutiao-a/./node_modules/engine.io-parser/build/esm/index.js","webpack://toutiao-a/./node_modules/@socket.io/component-emitter/index.mjs","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/util.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/transport.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/socket.js","webpack://toutiao-a/./node_modules/engine.io-client/build/esm/index.js","webpack://toutiao-a/./node_modules/socket.io-client/build/esm/url.js","webpack://toutiao-a/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://toutiao-a/./node_modules/socket.io-parser/build/esm/binary.js","webpack://toutiao-a/./node_modules/socket.io-parser/build/esm/index.js","webpack://toutiao-a/./node_modules/socket.io-client/build/esm/on.js","webpack://toutiao-a/./node_modules/socket.io-client/build/esm/socket.js","webpack://toutiao-a/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://toutiao-a/./node_modules/socket.io-client/build/esm/manager.js","webpack://toutiao-a/./node_modules/socket.io-client/build/esm/index.js","webpack://toutiao-a/src/views/my/chatView.vue","webpack://toutiao-a/./src/views/my/chatView.vue?aa30","webpack://toutiao-a/./src/views/my/chatView.vue?da34"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[_c('van-nav-bar',{attrs:{\"fixed\":\"\",\"left-arrow\":\"\",\"title\":\"小思同学\"},on:{\"click-left\":function($event){return _vm.$router.back()}}}),_c('div',{staticClass:\"chat-list\"},_vm._l((_vm.list),function(obj,index){return _c('div',{key:index},[(obj.name !== 'me')?_c('div',{staticClass:\"chat-item left\"},[_c('van-image',{attrs:{\"fit\":\"cover\",\"round\":\"\",\"src\":\"https://img.yzcdn.cn/vant/cat.jpeg\"}}),_c('div',{staticClass:\"chat-pao\"},[_vm._v(_vm._s(obj.msg))])],1):_c('div',{staticClass:\"chat-item right\"},[_c('div',{staticClass:\"chat-pao\"},[_vm._v(_vm._s(obj.msg))]),_c('van-image',{attrs:{\"fit\":\"cover\",\"round\":\"\",\"src\":_vm.$store.state.userPhoto}})],1)])}),0),_c('div',{staticClass:\"reply-container van-hairline--top\"},[_c('van-field',{attrs:{\"placeholder\":\"说点什么...\"},scopedSlots:_vm._u([{key:\"button\",fn:function(){return [_c('span',{staticStyle:{\"font-size\":\"12px\",\"color\":\"#999\"},on:{\"click\":_vm.sendFn}},[_vm._v(\"提交\")])]},proxy:true}]),model:{value:(_vm.word),callback:function ($$v) {_vm.word=$$v},expression:\"word\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","<template>\n  <div class=\"container\">\n    <!-- 固定导航 -->\n    <van-nav-bar\n      fixed\n      left-arrow\n      @click-left=\"$router.back()\"\n      title=\"小思同学\"\n    ></van-nav-bar>\n\n    <!-- 聊天主体区域 -->\n    <div class=\"chat-list\">\n      <div v-for=\"(obj, index) in list\" :key=\"index\">\n        <!-- 左侧是机器人小思 -->\n        <div class=\"chat-item left\" v-if=\"obj.name !== 'me'\">\n          <van-image\n            fit=\"cover\"\n            round\n            src=\"https://img.yzcdn.cn/vant/cat.jpeg\"\n          />\n          <div class=\"chat-pao\">{{ obj.msg }}</div>\n        </div>\n\n        <!-- 右侧是当前用户 -->\n        <div class=\"chat-item right\" v-else>\n          <div class=\"chat-pao\">{{ obj.msg }}</div>\n          <van-image fit=\"cover\" round :src=\"$store.state.userPhoto\" />\n        </div>\n      </div>\n    </div>\n\n    <!-- 对话区域 -->\n    <div class=\"reply-container van-hairline--top\">\n      <van-field v-model=\"word\" placeholder=\"说点什么...\">\n        <template #button>\n          <span style=\"font-size: 12px; color: #999\" @click=\"sendFn\">提交</span>\n        </template>\n      </van-field>\n    </div>\n  </div>\n</template>\n\n<script>\n// 1. 下包, 引入io\nimport { io } from \"socket.io-client\";\nimport { getItem } from \"@/utils/storage\";\nexport default {\n  name: \"chatCom\",\n  data() {\n    return {\n      word: \"\", // 输入框的内容\n      list: [\n        // 所有的聊天消息\n        // 只根据 name 属性，即可判断出这个消息应该渲染到左侧还是右侧\n        { name: \"xs\", msg: \"hi，你好！我是小思\" },\n        { name: \"me\", msg: \"我是编程小王子\" },\n        { name: \"xs\", msg: \"hi，你好！我是小思\" },\n      ],\n      socket: null, // 客户端和服务器端建立链接的socket对象\n    };\n  },\n  created() {\n    // 注意: io是建立socket链接, 和axios一毛钱关系也没有\n    this.socket = io(\"http://toutiao.itheima.net\", {\n      query: {\n        token: getItem(\"token\"),\n      },\n      transports: [\"websocket\"],\n    });\n\n    // 测试下是否建立链接成功\n    this.socket.on(\"connect\", () => {\n      console.log(\"链接建立成功\");\n    });\n\n    // 接收后端传回来的消息\n    this.socket.on(\"message\", (obj) => {\n      // 理解组织相同字段对象放到数组里 -> v-for更新\n      this.list.push({\n        name: \"xs\",\n        msg: obj.msg,\n      });\n\n      // 最后一条聊天消息滚动到屏幕范围\n      // 数据变化->DOM更新是异步的, 所以获取到的是上一条div\n      this.$nextTick(() => {\n        const theDiv = document.querySelector(\".chat-list>div:last-child\");\n        //滚动到指定元素\n        theDiv.scrollIntoView({\n          behavior: \"smooth\",\n        });\n      });\n    });\n  },\n  methods: {\n    // 发送span->点击事件\n    sendFn() {\n      if (this.word.trim().length === 0) return;\n      // 用socket链接对象.emit('后端接收消息的事件名', 值)\n      this.socket.emit(\"message\", {\n        msg: this.word,\n        timestamp: new Date().getTime(),\n      });\n\n      // 把消息显示到页面上\n      this.list.push({\n        msg: this.word,\n        name: \"me\",\n      });\n\n      //让聊天的滚动条，一直在底部\n      this.$nextTick(() => {\n        const theDiv = document.querySelector(\".chat-list>div:last-child\");\n        //滚动到指定元素\n        theDiv.scrollIntoView({\n          behavior: \"smooth\",\n        });\n      });\n\n      // 清空输入框\n      this.word = \"\";\n    },\n  },\n  destroyed() {\n    this.socket.close();\n    this.socket = null;\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.container {\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  box-sizing: border-box;\n  background: #fafafa;\n  padding: 92px 0 100px 0;\n  .chat-list {\n    height: 100%;\n    overflow-y: scroll;\n    .chat-item {\n      padding: 10px;\n      .van-image {\n        vertical-align: top;\n        width: 40px;\n        height: 40px;\n      }\n      .chat-pao {\n        vertical-align: top;\n        display: inline-block;\n        min-width: 40px;\n        max-width: 70%;\n        min-height: 40px;\n        line-height: 38px;\n        border: 0.5px solid #c2d9ea;\n        border-radius: 4px;\n        position: relative;\n        padding: 0 10px;\n        background-color: #e0effb;\n        word-break: break-all;\n        font-size: 14px;\n        color: #333;\n        &::before {\n          content: \"\";\n          width: 10px;\n          height: 10px;\n          position: absolute;\n          top: 12px;\n          border-top: 0.5px solid #c2d9ea;\n          border-right: 0.5px solid #c2d9ea;\n          background: #e0effb;\n        }\n      }\n    }\n  }\n}\n.chat-item.right {\n  text-align: right;\n  .chat-pao {\n    margin-left: 0;\n    margin-right: 15px;\n    &::before {\n      right: -6px;\n      transform: rotate(45deg);\n    }\n  }\n}\n.chat-item.left {\n  text-align: left;\n  .chat-pao {\n    margin-left: 15px;\n    margin-right: 0;\n    &::before {\n      left: -5px;\n      transform: rotate(-135deg);\n    }\n  }\n}\n.reply-container {\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  height: 88px;\n  width: 100%;\n  background: #f5f5f5;\n  z-index: 9999;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./chatView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./chatView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./chatView.vue?vue&type=template&id=ff27cc92&scoped=true&\"\nimport script from \"./chatView.vue?vue&type=script&lang=js&\"\nexport * from \"./chatView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./chatView.vue?vue&type=style&index=0&id=ff27cc92&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ff27cc92\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","$event","$router","back","_l","list","obj","index","key","name","_v","_s","msg","$store","state","userPhoto","scopedSlots","_u","fn","staticStyle","sendFn","proxy","model","value","word","callback","$$v","expression","staticRenderFns","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","addEventListener","event","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","alphabet","map","prev","seed","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","poll","pause","onPause","total","doPoll","doWrite","uri","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","request","assign","Request","req","method","xhrStatus","pollXhr","async","undefined","xscheme","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","Encoder","replacer","encode","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","created","token","console","theDiv","behavior","methods","timestamp","destroyed","component"],"sourceRoot":""}